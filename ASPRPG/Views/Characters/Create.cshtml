@model ASPRPG.Models.Character

@{
    Layout = "_Layout";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link rel="stylesheet" href="~/css/Enemy.css" asp-append-version="true" />
</head>
<body>

<h4>Character</h4>
<hr />
<div class="row">
    <div class="colo">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" id="nameContainer">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" id="nameInput" class="form-control" />
                <button type="button" class="btn-primary" id="getNameButton">Randomize</button>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Health" class="control-label"></label>
                <input asp-for="Health" id="Health" class="form-control" readonly />
                <span asp-validation-for="Health" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Attack" class="control-label"></label>
                <input asp-for="Attack" id="Attack" class="form-control" readonly />
                <span asp-validation-for="Attack" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Defense" class="control-label"></label>
                <input asp-for="Defense" id="Defense" class="form-control" readonly />
                <span asp-validation-for="Defense" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Icon" class="control-label"></label>
                    <div class="input-group" style="position: relative; width: 100%; height: 50px;">
                        <input asp-for="Icon" id="Icon" class="form-control" />
                        <span class="input-group-addon">
                            <i id="iconPreview" class="" style="transform: translate(10px, 10px);"></i>
                        </span>
                </div>
                <span asp-validation-for="Icon" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="button" id="rollButton" class="btn btn-primary">
                        &#x2680;&#x2680;&#x2680; Roll
                </button>
                <input type="submit" value="Create" class="btn btn-primary" />
                </div>
                <div>
                    <a asp-action="Index">Back to List</a>
                </div>
        </form>
    </div>
</div>


<script>
    const getNameButton = document.getElementById("getNameButton");
    const nameInput = document.getElementById("nameInput");

   const input = document.getElementById("Icon");
   const preview = document.getElementById("iconPreview");

   input.addEventListener("input", function(){
       preview.className = `fa-duotone fa-${input.value}`;
   });

   document.getElementById("rollButton").addEventListener("click", function()
   {
        document.getElementById("Health").value = rollDice(3, 6);
        document.getElementById("Attack").value = rollDice(3, 6);
        document.getElementById("Defense").value = rollDice(3, 6);
   });

   const rollDice = (numOfDice, sidesOfDice) => {
        let sum = 0;
        for(let i = 0; i < numOfDice; i++){
            sum += Math.floor(Math.random() * sidesOfDice) + 1;
        }
        return sum;
   }

        // Generate random name
        getNameButton.addEventListener("click", function () {
            const xhr = new XMLHttpRequest();
            xhr.open("GET", "https://www.behindthename.com/api/random.json?number=1&key=xa697486151", true);

            xhr.onload = function () {
                if (this.status === 200) {
                    const name = JSON.parse(this.responseText).names[0];
                    nameInput.value = name;
                }
                else {
                    console.error("An error occurred while making the API request")
                }
            }

            xhr.send();
        })
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
</body>
</html>
